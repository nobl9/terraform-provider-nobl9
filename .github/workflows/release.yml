# This GitHub action can publish assets for release when a tag is created.
# Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
#
# This uses an action (hashicorp/ghaction-import-gpg) that assumes you set your
# private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
# secret. If you would rather own your own GPG handling, please fork this action
# or use an alternative one for key handling.
#
# You will need to pass the `--batch` flag to `gpg` in your signing step
# in `goreleaser` to indicate this is being used in a non-interactive mode.
#
name: Release
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-beta"
      - "v[0-9]+.[0-9]+.[0-9]+-alpha"
jobs:
  test:
    uses: ./.github/workflows/acc-tests.yml
    with:
      clientId: "${{ vars.TERRAFORM_NOBL9_CLIENT_ID }}"
      project: "${{ vars.TERRAFORM_NOBL9_PROJECT }}"
      ref: "${{ github.ref_name }}"
    secrets:
      clientSecret: "${{ secrets.TERRAFORM_NOBL9_CLIENT_SECRET }}"
  qa-approval:
    runs-on: ubuntu-latest
    environment: qa-approval
    steps:
      - name: No-op approval
        run: echo "This is a no-op step, QA needs to approve it and may perform testing beforehand"
  goreleaser:
    runs-on: ubuntu-latest
    needs: [test, qa-approval]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Import GPG key
        id: import_gpg
        uses:  crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY_2024_03 }}
          passphrase: ${{ secrets.PASSPHRASE_2024_03 }}
      - name: setup github
        run: git config --global url."https://n9-machine-user:${{ secrets.GH_TOKEN }}@github.com".insteadOf "https://github.com"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
